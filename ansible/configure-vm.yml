# ansible/configure-vm.yml
---
- name: Configure VM and Install Docker
  hosts: gcp_vms # Target hosts defined in inventory.ini
  become: yes # Execute tasks with sudo (root privileges)
  tasks:
    # --- Pre-cleanup Task ---
    - name: Remove potentially malformed Docker sources list from previous runs
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent # Ensure the file is absent/deleted before proceeding

    # --- Standard Setup Tasks ---
    - name: Update apt package cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600 # Update only if cache is older than 1 hour

    # ansible/configure-vm.yml (Replace GPG/repo tasks)

- name: Configure VM and Install Docker
  hosts: gcp_vms
  become: yes
  tasks:
    - name: Update apt package cache and install prerequisites
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes
        cache_valid_time: 3600

        # --- Add Docker GPG key & Repository (Piping to apt-key - Simplified) ---
        # TODO: Replace this deprecated apt-key method with a working 'signed-by=' approach
        #       or use a pre-baked image with Docker installed. This is a temporary
        #       workaround due to persistent apt GPG verification issues in this specific environment.
    - name: Add Docker's GPG key via curl piped to apt-key (Deprecated)
      ansible.builtin.shell:
        # Directly pipe the downloaded key into apt-key add
        # The '-' tells apt-key to read from standard input
        cmd: curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
        executable: /bin/bash # Good practice to specify executable
      # Removed 'warn', 'register', and 'changed_when' for simplicity

    - name: Add Docker repository source list
      ansible.builtin.apt_repository:
        # Using apt-key, so NO signed-by= needed here
        repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
        update_cache: yes # Update cache immediately after adding repo

    # --- Install Docker ---
    - name: Install Docker Engine, CLI, Containerd, and Compose plugin
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        # Cache was updated in the previous step

    # --- Install Docker ---
    - name: Update apt cache after adding repo
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker Engine, CLI, Containerd, and Compose plugin
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        # update_cache: yes # Cache updated in previous step

    # --- Configure Docker Service and User ---
    - name: Ensure Docker service is running and enabled on boot
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Add remote user (ansible_user) to the docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}" # Use the user defined in inventory vars
        groups: docker
        append: yes # Add to existing groups, don't replace
      # Notifying SSH restart might be problematic, let's remove it for now.
      # User will need to reconnect SSH for group change to take effect.
      # notify: Restart SSH

  # handlers: # Handlers block removed for now to avoid potential SSH issues
  #   - name: Restart SSH
  #     ansible.builtin.service:
  #        name: sshd # Or 'ssh' depending on the OS
  #        state: restarted
  #     listen: "Restart SSH"
