# .github/workflows/deploy.yml
name: Build and Deploy Chat App to GKE

on:
  push:
    # Keep trigger on main for now, can add feature branch later if desired
    branches: [ main ]
  # Allow manual trigger from Actions tab
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'main' # Default to main, but can be changed when run manually

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # Use ref from manual trigger if available, otherwise use push event ref
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          # Use commit SHA for unique tagging + latest
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/chat-app:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/chat-app:latest

  # --- NEW DEPLOY JOB FOR GKE ---
  deploy-to-gke:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: build-and-push # Run after build job
    # Add permissions needed for auth action and gcloud
    permissions:
       contents: 'read'
       id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      # Authenticate to Google Cloud using Workload Identity Federation (preferred) or SA Key
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          # Use workload_identity_provider OR credentials_json
          # credentials_json: '${{ secrets.GCP_SA_KEY }}' # Use the SA Key stored in secrets
          # If using WIF (more secure, requires setup in GCP):
          workload_identity_provider: 'projects/<YOUR_GCP_PROJECT_NUMBER>/locations/global/workloadIdentityPools/<YOUR_POOL_NAME>/providers/<YOUR_PROVIDER_NAME>'
          service_account: 'github-actions-gke-deployer@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com' # Use your SA email

      # Set up gcloud CLI (needed for get-credentials)
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }} # Assuming you added GCP_PROJECT_ID secret

      # Get GKE cluster credentials
      - name: Get GKE credentials
        # Uses gcloud auth context set by the auth action
        # Assumes secrets.GCP_PROJECT_ID and secrets.GCP_ZONE are set
        run: gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GCP_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

      # Deploy application manifests
      - name: Deploy to GKE with kubectl
        run: kubectl apply -f k8s/