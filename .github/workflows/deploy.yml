# .github/workflows/deploy.yml
name: Build and Deploy Todo App

on:
  push:
    branches: [ main ] # Or 'master', depending on your default branch

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest # Use a Linux runner for consistency
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the repo root
          file: ./Dockerfile # Path to Dockerfile
          platforms: linux/amd64 # Target architecture for the VM
          push: true # Push the image to registry
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/chat-app:latest # Tag as latest

  deploy:
    name: Deploy to GCP VM
    runs-on: ubuntu-latest
    needs: build-and-push # Run only after build-and-push job succeeds
    steps:
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH host key to known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy using Docker Compose via SSH
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ~/todo-app
            echo "Pulling latest web image..."
            docker compose pull web
            echo "Starting application stack..."
            docker compose up -d --remove-orphans
            echo "Cleaning up old images..."
            docker image prune -f
            echo "Deployment complete!"
          EOF