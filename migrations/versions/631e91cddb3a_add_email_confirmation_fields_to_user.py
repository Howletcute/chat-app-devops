"""Add email confirmation fields to User

Revision ID: 631e91cddb3a
Revises: a2572b2ff187 
Create Date: ... 

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '631e91cddb3a' # Make sure this matches your filename
down_revision = 'a2572b2ff187' # Make sure this matches the previous revision
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - adjust manually ###

    # Step 1: Add columns allowing NULLs initially
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_confirmed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('email_confirmed_on', sa.DateTime(), nullable=True))

    # Step 2: Update existing rows to set a default value for email_confirmed
    # Set email_confirmed to False for all rows where it is currently NULL
    op.execute('UPDATE users SET email_confirmed = false WHERE email_confirmed IS NULL')

    # Step 3: Alter email_confirmed column to be NOT NULL
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('email_confirmed',
                            nullable=False)

    # Note: email_confirmed_on remains nullable=True as defined in the model

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Revert in reverse order of upgrade
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Drop the columns added in upgrade
        batch_op.drop_column('email_confirmed_on')
        batch_op.drop_column('email_confirmed')

    # ### end Alembic commands ###